<!-- Internship dates and branch form. -->
<div id="form-div" class="row well">
  <%= form_tag("/", method: "get", class: "form-inline") do %>
      <div class="form-group col-md-2">
        <%= label_tag(:from_semester, "De", style: "margin-right: 5px;") %>
        <%= select_tag(:from_semester, options_for_select(@all_semesters, params[:from_semester]), class: "form-control") %>
      </div>
      <div class="form-group col-md-2">
        <%= label_tag(:to_semester, "À", style: "margin-right: 5px;") %>
        <%= select_tag(:to_semester, options_for_select(@all_semesters, params[:to_semester]), class: "form-control") %>
      </div>
      <div class="form-group col-md-2">
        <%= label_tag(:level_like, "Stages", style: "margin-right: 5px;") %>
        <%= select_tag(:level_like, options_for_select(@all_levels, params[:level_like]), class: "form-control", include_blank: "Tous") %>
      </div>
      <div id="branch-type-filter" class="form-group col-md-2">
        <%= label_tag(:branch_like, "Branche", style: "margin-right: 5px;") %>
        <%= select_tag(:branch_like, options_for_select(@all_branches, params[:branch_like]), class: "form-control", include_blank: "Toutes") %>
      </div>
      <div class="form-group col-md-2">
        <%= label_tag(:filiere_like, "Filière", style: "margin-right: 5px;") %>
        <%= select_tag(:filiere_like, grouped_options_for_select(@all_filieres_grouped_by_branches, params[:filiere_like]), class: "form-control", include_blank: "Toutes") %>
      </div>
      <button type="submit" class="col-md-2 btn btn-primary">Rechercher</button>
  <% end %>
</div>

<div class="row">
  <!-- Table containing internships. -->
  <div class="col-md-9">
    <% if !@internships.nil? and @internships.any? %>
    <table class="table-data table table-condensed table-hover">
      <thead>
      <tr>
        <th>Sem.</th>
        <th>Sujet</th>
        <th>Entreprise</th>
        <th>Ville</th>
        <th>Pays</th>
      </tr>
      </thead>
      <tr>
        <td></td>
        <td><div class="form-group"><input type="text" class="form-control subject" placeholder="Entrez une expression pour filtrer les sujets" autocomplete="off"/></div></td>
        <td><div class="form-group"><input data-provide="typeahead" typeahead-search="company" type="text" class="form-control company" placeholder="Filtrer entreprises" autocomplete="off"/></div></td>
        <td><div class="form-group"><input data-provide="typeahead" typeahead-search="city" type="text" class="form-control city" placeholder="Ville" autocomplete="off"/></div></td>
        <td><div class="form-group"><input data-provide="typeahead" typeahead-search="country" type="text" class="form-control country" placeholder="Pays" autocomplete="off"/></div></td>
      </tr>
      <% @internships.each do |internship| %>
          <tr internship-id="<%= internship.id %>">
            <!-- Different color for spring and autumn semesters -->
            <td <% if internship.semester == 'A' %>class="text-success"<% end %>><%= internship.semester %><%= internship.year %></td>
            <td class="subject"><a href="application/<%= internship.id %>"><%= internship.subject %></a></td>
            <td class="company"><%= internship.company %></td>
            <td class="city"><%= internship.city %></td>
            <td class="country"><%= internship.country %></td>
          </tr>
      <% end %>
    </table>

    <!-- Map div, hidden by default. -->
    <div id="map" style="height: 500px; width: 100%; display: none;"></div>

    <% else %>
        <div class="table-data alert alert-dismissible alert-danger">
          <button type="button" class="close" data-dismiss="alert">×</button>
          <h4>Pas de résultat.</h4>
          <p>Aucune entrée ne correspond aux critères de recherche.</p>
        </div>
    <% end %>
  </div>

  <!-- Panel displaying info of the selected internship. Only visible on large screen devices. -->
  <div class="col-md-3 visible-md visible-lg" id="panel-container">
    <div style="padding-bottom: 40px;">
        <button class="col-xs-6 btn btn-primary btn-sm view-button-selector">Liste</button>
        <button class="col-xs-6 btn btn-default btn-sm view-button-selector">Carte</button>
    </div>
    <div class="panel panel-success" data-spy="affix" data-offset-top="80" id="internship-info">
      <div class="panel-heading">
        <h3 class="panel-title">Sujet</h3>
      </div>
      <div class="panel-body">
        Description du stage
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    var $internshipInfoPanel = $('#internship-info');
    var $map = $('#map');
    var $table = $('.table-data');

    var $buttonViewSelectors = $('.view-button-selector');

    // If user changed of view by clicking a button, toggle button view selectors classes and display the other view.
    $buttonViewSelectors.on('click', function() {
        if (!$(this).hasClass('btn-primary')) {
            $buttonViewSelectors.toggleClass('btn-primary');
            $buttonViewSelectors.toggleClass('btn-default');

            toggleTableMapDisplay();
        }
    });

    // If map is visible, hide it and show the table. Else, do the opposite.
    function toggleTableMapDisplay() {
        $table.toggle();
        $map.toggle();

        resizeElements();
    };

    // Resize map and panel.
    function resizeElements() {
        $internshipInfoPanel.width($internshipInfoPanel.parent().width());

        if ($map.css('display') !== 'none') {
            $map.height($(window).height() - $('#form-div').height() - $('.navbar').height() - 70);
            // Redraw map when map height changes.
            invalidateMapSize();
        }
    }

    //Setting panel size when page is loaded.
    resizeElements();

    //Resizing panel width when size of the window changes.
    $(window).resize(function () {
        resizeElements();
    });

    // Change right panel content when user clicks on a table row or a map marker.
    // Display information of the given internship id.
    updateRightPanelInformation = function (internshipId) {
        //Retrieving data of the clicked row
        $.ajax({
            url: "/internships/" + internshipId,
            type: "GET",
            dataType: "json"
        }).done(function(data){
            $internshipInfoPanel.find('.panel-title').text(data.subject);
            updateInfoPanelContents(data);
        });
    };

    $('tr[internship-id]').click(function(){
        var id = $(this).attr('internship-id');
        updateRightPanelInformation(id);
    });

    /*
    Update contents of internship information panel based on information retrieved from server.
     */
    function updateInfoPanelContents(data){
        $internshipInfoPanel.find('.panel-body').html(data.description)
    }

    $rows = $('table tr[internship-id]');

    // When row is click: highlight it. Other rows should not be highlighted.
    $rows.on('click', function(event) {
        $(this).addClass('success').siblings().removeClass('success');
    });

    $filters = $('table input');

    $filters.on("focusout", function () {
        filterTable()
    });

    $filters.on("keyup", function (e) {
        //If user pressed enter key: remove focus, which triggers table filter. (Only if it is not on a typeahead field. If typeahead, enter is only allowed when field is blank.
        if (e.keyCode == 13) {
            if (!$(this).attr("data-provide") || !$(this).val()) {
                $(this).blur();
            }
        }
    });

    function filterTable() {
        //Determine which filtered contain text entered by user to filter table.
        var $filtersUsed = $filters.filter(function () {
            return $.trim(this.value).length > 0;
        });

        //If user did not input anything, or if field is blank (spaces), return and show everything.
        if ($filtersUsed.length === 0)
            return $rows.show();

        //Getting class of the filters used by the user.
        var $filterClass = '.' + $filtersUsed.map(function () {
                    return this.className.split(' ')[1];
                }).get().join(',.');

        //Filtering table. Only filtering td with class that should be filtered.
        $rows.hide().filter(function () {
            return $('td', this).filter($filterClass).filter(function () {
                        var content = this.textContent.toLowerCase();
                        var inputVal = $filtersUsed.filter('.' + this.className).val().toLowerCase();

                        return content.indexOf(inputVal) > -1;

                    }).length === $filtersUsed.length;
        }).show();
    }

    // Manage branch and filiere changes.
    $branch_select = $('#branch_like');
    $filiere_select = $('#filiere_like');

    // Manage branch and filiere changes.
    $branch_select.on('change', function () {
        $filiere_select.val(null);
    });

    $filiere_select.on('change', function () {
        var branch = $(':selected', this).parent().attr('label');

        // Selecting branch associated to filiere if any.
        if ($branch_select.find('option[value="' + branch + '"]').length > 0)
            $branch_select.val(branch);
    });


    $internship_data = <%= @internship_data_json.to_json.html_safe %>;

    $('input[data-provide="typeahead"]').each(function(){
        var $this = $(this);

        $this.typeahead({
            autoSelect: true,
            afterSelect: function(item){
                filterTable();
            },
            minLength: 2,
            displayText: function(item) {
                return item;
            },
            source: function (query, process) {
                switch ($this.attr("typeahead-search")) {
                    case "company": return process($internship_data.companies.concat($this.val()));
                    case "city": return process($internship_data.cities.concat($this.val()));
                    case "country": return process($internship_data.countries.concat($this.val()));
                }
            }
        });
    });
});
</script>
<script type="text/javascript">
$(document).ready(function() {

    invalidateMapSize = function() {
        if(map != null) {
            // Map already exists.
            map.invalidateSize();
        }
        else {
            // Drawing map if does not exist. (Will not draw map if user does not want to see it to save memory.
            drawMap();
        }
    };

    // Array of markers.
    var dataMarkers = <%= @internships_geolocalized.to_json.html_safe %>;
    var map = null;
    var markers = L.markerClusterGroup({});
    var count_bad = 0, count_good = 0;

    drawMap = function() {
        map = L.map(document.getElementById('map'), {
            minZoom: 2,
            maxZoom: 18,
            layers: [
                L.tileLayer(
                        'https://{s}.tiles.mapbox.com/v4/powershops.k9bpc33d/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoicG93ZXJzaG9wcyIsImEiOiJhYUdRR0t3In0.oTz8RJqED2YEcDRfJYNAOQ',
                        {attribution: ''})
            ],
            attributionControl: false
        });

        dataMarkers.forEach(function (m) {
            if (m.latitude == null) {
                count_bad ++;
            }
            else {
                var title = "<strong>" + m.company + "</strong>" + "<br/>";
                title += "<a href=\"" + m.url + "\">" + m.subject + "</a>" + "<br/>" + m.address;
                var marker = L.marker(L.latLng(m.latitude, m.longitude), {
                    'id': m.id
                });
                marker.bindPopup(title);
                marker.on('click', function(e) {
                    updateRightPanelInformation(e.target.options.id);
                });

                markers.addLayer(marker);
                count_good ++;
            }
        });
        map.addLayer(markers);

        map.fitWorld();
    }
});
</script>